package logic;

import java.util.Arrays;
import java.util.Scanner;

public class B2667 {
	static int[][] map;
	static int num_count = 1;
	static int[] result;
	
	public static void main(String[] args) {
		Scanner put = new Scanner(System.in);
		
		int n = put.nextInt();
		
		map = new int[n][n];
		for(int i=0; i<n; i++){
			String str = put.next();
			for (int j=0; j<n; j++) {
				map[i][j] = str.charAt(j)-48;
			}
		}

		map_check(n);
		
		System.out.println(num_count-1);
		for (int i=0; i<result.length; i++) {
			System.out.println(result[i]);
		}
	}
	
	public static void map_check(int n) {
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++) {
				if(1 == map[i][j]) {
					num_count++;
					map[i][j] = num_count;
					side_check(i, j, n);
				}
			}
		}
		
		result = new int[num_count-1];
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++) {
				if(0 != map[i][j]) {
					result[map[i][j]-2]++;
				}
			}
		}
		
		Arrays.sort(result);
	}
	
	public static void side_check (int i, int j, int n) {
		// 上
		if (0 < i) {
			if (1 == map[i-1][j]) {
				map[i-1][j] = num_count;
				side_check(i-1, j, n);
			}
		}
		// 下
		if (n-1 > i) {
			if (1 == map[i+1][j]) {
				map[i+1][j] = num_count;
				side_check(i+1, j, n);
			}
		}
		// 左
		if (0 < j) {
			if (1 == map[i][j-1]) {
				map[i][j-1] = num_count;
				side_check(i, j-1, n);
			}
		}
		// 右
		if (n-1 > j) {
			if (1 == map[i][j+1]) {
				map[i][j+1] = num_count;
				side_check(i, j+1, n);
			}
		}
	}
}
